{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import {\n  defineDocumentType,\n  makeSource,\n  defineNestedType,\n} from 'contentlayer/source-files';\n\nimport readingTime from 'reading-time';\nimport remarkGfm from 'remark-gfm';\nimport rehypeSlug from 'rehype-slug';\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\nimport rehypeCodeTitles from 'rehype-code-titles';\nimport rehypePrism from 'rehype-prism-plus';\n\nconst computedFields = {\n  readingTime: { type: 'json', resolve: (post) => readingTime(post.body.raw) },\n  slug: {\n    type: 'string',\n    resolve: (post) => `/${post._raw.flattenedPath}`,\n  },\n};\n\nconst Post = defineDocumentType(() => ({\n  name: 'Post',\n  contentType: 'mdx',\n  // Location of Post source files (relative to `contentDirPath`)\n  filePathPattern: `**/*.mdx`,\n  fields: {\n    title: {\n      type: 'string',\n      description: 'The title of the post',\n      required: true,\n    },\n    date: {\n      type: 'date',\n      description: 'The create date of the post',\n      required: true,\n    },\n    dateModified: {\n      type: 'date',\n      description: 'The last updated date of the post',\n      required: true, // mandatory so just use the created date until modified later.\n    },\n    draft: {\n      type: 'boolean',\n      default: false,\n      description: 'Is the post a draft?',\n      required: true,\n    },\n    author: {\n      type: 'string',\n      description: 'The author of the post',\n      required: true,\n    },\n    description: {\n      type: 'string',\n      description:\n        'The excerpt or description of the post to show as a snippet.',\n      required: true,\n    },\n    tags: {\n      type: 'list',\n      description: 'The related tags of the post.',\n      of: { type: 'string' },\n    },\n    categories: {\n      type: 'list',\n      description: 'The related categories of the post.',\n      of: { type: 'string' },\n    },\n    canonical: {\n      type: 'string',\n      description:\n        'If this is a copy or duplicate of another post, what is that URL',\n      required: false,\n    },\n  },\n  computedFields,\n}));\n\nconst contentLayerConfig = makeSource({\n  // location of the source files\n  contentDirPath: 'posts',\n  documentTypes: [Post],\n  mdx: {\n    remarkPlugins: [remarkGfm],\n    rehypePlugins: [\n      rehypeSlug,\n      rehypeCodeTitles,\n      rehypePrism,\n      [\n        rehypeAutolinkHeadings,\n        {\n          properties: {\n            className: ['anchor'],\n          },\n        },\n      ],\n    ],\n  },\n});\n\nexport default contentLayerConfig;\n"],
  "mappings": ";AAAA;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,OACK;AAEP,OAAO,iBAAiB;AACxB,OAAO,eAAe;AACtB,OAAO,gBAAgB;AACvB,OAAO,4BAA4B;AACnC,OAAO,sBAAsB;AAC7B,OAAO,iBAAiB;AAExB,IAAM,iBAAiB;AAAA,EACrB,aAAa,EAAE,MAAM,QAAQ,SAAS,CAAC,SAAS,YAAY,KAAK,KAAK,GAAG,EAAE;AAAA,EAC3E,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,SAAS,IAAI,KAAK,KAAK;AAAA,EACnC;AACF;AAEA,IAAM,OAAO,mBAAmB,OAAO;AAAA,EACrC,MAAM;AAAA,EACN,aAAa;AAAA,EAEb,iBAAiB;AAAA,EACjB,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,cAAc;AAAA,MACZ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,OAAO;AAAA,MACL,MAAM;AAAA,MACN,SAAS;AAAA,MACT,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,aACE;AAAA,MACF,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,IAAI,EAAE,MAAM,SAAS;AAAA,IACvB;AAAA,IACA,YAAY;AAAA,MACV,MAAM;AAAA,MACN,aAAa;AAAA,MACb,IAAI,EAAE,MAAM,SAAS;AAAA,IACvB;AAAA,IACA,WAAW;AAAA,MACT,MAAM;AAAA,MACN,aACE;AAAA,MACF,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA;AACF,EAAE;AAEF,IAAM,qBAAqB,WAAW;AAAA,EAEpC,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACH,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,YAAY;AAAA,YACV,WAAW,CAAC,QAAQ;AAAA,UACtB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAED,IAAO,8BAAQ;",
  "names": []
}
